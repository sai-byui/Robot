import RPi.GPIO as GPIO
from time import sleep
import pygame
from pygame.locals import *

GPIO.setmode(GPIO.BOARD)

Motor1A = 11
Motor1B = 12

Motor2A = 13
Motor2B = 15

GPIO.setup(Motor1A, GPIO.OUT)
GPIO.setup(Motor1B, GPIO.OUT)
GPIO.setup(Motor2A, GPIO.OUT)
GPIO.setup(Motor2B, GPIO.OUT)

#print("Turning motor on")
#GPIO.output(Motor1A, GPIO.HIGH)
#GPIO.output(Motor1B, GPIO.LOW)
#GPIO.output(Motor2A, GPIO.HIGH)
#GPIO.output(Motor2B, GPIO.LOW)

#sleep(5)

#print("Stopping motor")
#GPIO.output(Motor1A, GPIO.LOW)
#GPIO.output(Motor2A, GPIO.LOW)
# The getch method can determine which key has been pressed
# by the user on the keyboard by accessing the system files
# It will then return the pressed key as a variable
pygame.init()

screen = pygame.display.set_mode((630,630))

while True:

    
    keys = pygame.key.get_pressed()
    if keys[pygame.K_UP]:
        print("hello")
        motor1_forward()
        motor2_forward()
        

def getch():
    fd = sys.stdin.fileno()
    old_settings = termios.tcgetattr(fd)
    try:
        tty.setraw(sys.stdin.fileno())
        ch = sys.stdin.read(1)
    finally:
        termios.tcsetattr(fd, termios.TCSADRAIN, old_settings)
    return ch

# This section of code defines the methods used to determine
# whether a motor needs to spin forward or backwards. The
# different directions are acheived by setting one of the
# GPIO pins to true and the other to false. If the status of
# both pins match, the motor will not turn.
def motor1_forward():
    io.output(Motor1A, True)
    io.output(Motor1B, False)

def motor1_reverse():
    io.output(Motor1A, False)
    io.output(Motor1B, True)

def motor2_forward():
    io.output(Motor2A, True)
    io.output(Motor2B, False)

def motor2_reverse():
    io.output(Motor2A, False)
    io.output(Motor2B, True)


GPIO.cleanup()
